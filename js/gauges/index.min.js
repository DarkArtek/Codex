var TIMEOUT=config.timeout,REFRESH=config.refresh,debug=!1,user=new User;function logData(line){switch(line[0]){case"03":user.bindPet(line[6].toUpperCase(),line[2],line[3]);break;case"21":logAction(line[2],line[4],line[5]);break;case"22":logAction(line[2],line[4],line[5],!0);break;case"26":gainBuff(line[5],line[2],parseFloat(line[4]),line[3]);break;case"30":loseBuff(line[5],line[2],line[3]);break;case"31":parseJob(line[2],line[3]);break;case"33":"40000010"===line[3]&&reload()}}function logAction(sourceId,actionId,actionName,isAoe=!1){if(sourceId==user.id||sourceId==user.pet.id){if(isAoe){var time=(new Date).getTime();if(actionId in user.lastCast&&time-user.lastCast[actionId]<100)return;user.lastCast[actionId]=time}if(debug&&console.log("ACTION     "+actionName+"  "+actionId),user.iterateBuffs((function(buff){if(buff.active)switch(buff.type){case"gcds":buff.checkId(actionId)&&(buff.count++,setCountUI(buff.id,buff.count))}})),user.hasBuff(actionId)){var buff=user.getBuff(actionId);gainBuff(sourceId,actionId,buff.data.time,actionName),user.resetTimer(actionId),user.timers[actionId]=setTimeout((function(){loseBuff(sourceId,actionId,actionName)}),1e3*buff.data.time)}user.hasAlias(actionId)&&logAction(sourceId,user.getAlias(actionId),actionName)}}function gainBuff(sourceId,buffId,buffTime,buffName){if(sourceId==user.id){if(debug&&console.log("BUFF     "+buffName+" - "+buffId),user.hasBuff(buffId)){var buff=user.getBuff(buffId);if(buff.active&&buff.data.noRefresh)return;switch(buff.type){case"gcds":buff.count=0,buff.active=!0;break;case"timer":buff.startTime=(new Date).getTime(),buff.count=parseFloat(buffTime),buff.active=!0,user.resetInterval(buffId),user.intervals[buffId]=setInterval((function(){if(user.hasBuff(buffId)){var b_=user.getBuff(buffId);if(b_.active){var count=b_.count-((new Date).getTime()-b_.startTime)/1e3;setCountUI(buffId,Math.max(0,count))}}}),REFRESH)}buff.data.hides&&(hide(buff.data.hides),unHide(buffId))}user.hasAlias(buffId)&&gainBuff(sourceId,user.getAlias(buffId),buffTime,buffName)}}function loseBuff(sourceId,buffId,buffName){if(sourceId==user.id&&user.hasBuff(buffId)){var buff=user.getBuff(buffId);if(buff.active){switch(debug&&console.log("LOSEBUFF   "+buffId+" "+buffName),buff.type){case"gcds":break;case"timer":user.resetInterval(buffId),setCountUI(buffId,0)}buff.active=!1,setTimeout((function(){setCountUI(buffId,0)}),TIMEOUT)}user.hasAlias(buffId)&&loseBuff(sourceId,user.getAlias(buffId),buffName)}}function parseJob(sourceId,jobString){var jobId;sourceId==user.id&&switchJob(parseInt(jobString.substr(jobString.length-2,2),16))}function switchJob(jobId){user.setJob(jobId)&&(user.initGBuffs(),setJobUI(user.job))}function reload(){user.reset(),user.initGBuffs(),clearDanger(),setJobUI(user.job)}async function init(){let combat=(await callOverlayHandler({call:"getCombatants"})).combatants;combat.length>0?(user.init(combat[0].ID.toString(16).toUpperCase()),switchJob(combat[0].Job)):setTimeout((function(){init()}),1e3)}addOverlayListener("LogLine",data=>{logData(data.line)}),addOverlayListener("ChangePrimaryPlayer",data=>{""!==user.id&&data.charID.toString(16).toUpperCase()!==user.id&&location.reload()}),addOverlayListener("ChangeZone",data=>{user.setZone(data.zoneID)||reload()}),document.addEventListener("onOverlayStateUpdate",e=>{let docClassList=document.documentElement.classList;e.detail.isLocked?docClassList.add("locked"):docClassList.remove("locked")}),startOverlayEvents(),init();